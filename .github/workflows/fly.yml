name: Fly Deploy
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
  NODE_ENV: production

jobs:
  deploy:
    name: Deploy app
    runs-on: ubuntu-latest
    environment: production
    
    env:
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
      FRONTEND_URL: ${{ secrets.FRONTEND_URL }}
      PORT: 8080
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'
          cache: 'npm'
          
      - name: Configure npm
        run: |
          npm set progress=false
          npm config set legacy-peer-deps true
          npm config set fetch-retry-maxtimeout 600000
          mkdir -p ~/.npm
          sudo chown -R $USER:$GROUP ~/.npm
          
      - name: Install Prisma CLI
        run: npm install -g prisma
          
      - name: Generate Prisma Client
        run: |
          npx prisma generate --schema=./prisma/schema.prisma
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          
      - name: Install dependencies
        run: |
          npm ci || npm install --no-package-lock
        env:
          NODE_ENV: development
          PRISMA_SCHEMA_PATH: ./prisma/schema.prisma
          
      - name: Install types
        run: |
          npm install --save-dev @types/node@20.6.2 @types/express@4.17.17 @types/cors@2.8.14 || true
          
      - name: Build application
        run: npm run build
        
      - name: Run tests
        run: npm test || true
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          
      - name: Install Fly
        uses: superfly/flyctl-actions/setup-flyctl@master
        
      - name: Deploy to Fly.io
        run: flyctl deploy --remote-only
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
